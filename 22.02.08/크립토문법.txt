우리는 크립토좀비의 DNA를 블록체인의 address로 생각하면될거같다
그리고 우리는 이런 좀비들 DNA값으로 여러가지 좀비들을 채취할수 있었다.

챕터2 : 컨트랙트
솔리디티 코드는 컨트랙트 안에 싸여 있지.
모든 변수와 함수는 컨트랙트에 속해있다
우리는 솔리디티 소스코드를  선언하는 개념을 배웠다.

챕터3: 상태 변수 정수
상태변수는 컨트랙트 저장소에 영구저장 = 이더리움 블록체인에 기록
데이터베이스에 데이터를 쓰는 것과 동일

부호 없는 정수 uint
값이 음수가 아니어야한다는 의미
부호 있는 정수를 위한 int 자료형도 있음
우리는 DNA의 숫자를 선언해줄수있게 되었다.

쳅터4:수학연산
우리는 수학연산처럼 승에 승을 할수있도록 하였다.
uint형 변수를 생성하고 10^16승값을 배정할수있다.
uint x = 5 ** 2; //즉 5^2 = 25이다.

챕터5:구조체
복잡한 자료형을 필요로 할때 가끔 있다.
우리는 그럴때 구조체를 쓴다
여러가지 특성을 가질경우 사용한다.

쳅터6:배열
나는 아직도 배열에대한 이해가 어렵고 이것을 빼내고 넣고하는 작업 또한 어렵다
솔리디티에서는 정적과 동적배열 두종류가있고
동적배열 = [] 늘어날수있도록 배열 선언
고정배열 = [2] 2개의 원소의 배열

쳅터7:함수 선언
솔리디티의 함수와 자바의함수는 차이가 있을수 있다.
function jeon(string name, uint age){
}
이런식으로 타입을 매개변수이자 인자로 전달받고있기때문이다.
우리는 이 함수를 호출할때
jeon("jeonjinyoung",30);
이렇게 호출할수있다.

쳅터8:구조체와 배열 활용하기
우리는 이제 배웠던 구조체와 배열을 활용해볼것이다.
구조체 : 여러가지 속성과 타입을 선언할수있고
그것을 배열에 추가할수있다.
struct Person { uint age; string name; }
Person[] public people;
이라는 구조체가 있다면
구조체를 사용할 변수를 선언
//satoshi라는 사람구조체를 사용할 변수선언 = Person Satoshi 
//구조체안의 인자에 값을 선언 = Person(172, "Satoshi") 
Person Satoshi = Person(172, "Satoshi") 
//이사람을 사람들배열안에 추가한다.
people.push(satoshi); 

쳅터9:private / public 함수
함수 기본선언에 public으로 선언
다른 어느 컨트렉트가 자네 컨트렉트의 함수를 호출하고 코드 실행가능

기본함수를 사용시 private로 선언하는것이좋다.
공개할 함수만 public선언
그리고 함수명도 언더바(_)시작하는것이 관례


